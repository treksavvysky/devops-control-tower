[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "devops-control-tower"
version = "0.1.0"
description = "Centralized command center for AI-powered development operations"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.13"
authors = [
    { name = "George Loudon", email = "george@example.com" }
]
keywords = ["devops", "ai", "orchestration", "automation", "infrastructure"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Tools",
    "Topic :: System :: Systems Administration",
]

dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.13.0",
    "asyncpg>=0.29.0",
    "redis>=5.0.0",
    "celery>=5.3.0",
    "kubernetes>=28.1.0",
    "docker>=6.1.0",
    "httpx>=0.25.0",
    "websockets>=12.0",
    "langchain>=0.1.0",
    "langchain-openai>=0.0.5",
    "openai>=1.3.0",
    "anthropic>=0.8.0",
    "prometheus-client>=0.19.0",
    "grafana-api>=1.0.3",
    "boto3>=1.34.0",
    "azure-identity>=1.15.0",
    "google-cloud-monitoring>=2.16.0",
    "terraform-python>=0.1.0",
    "ansible-runner>=2.3.4",
    "pyyaml>=6.0.1",
    "jinja2>=3.1.0",
    "croniter>=2.0.0",
    "structlog>=23.2.0",
    "rich>=13.7.0",
    "typer>=0.9.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.6.0"
]
monitoring = [
    "datadog>=0.48.0",
    "newrelic>=9.2.0",
    "sentry-sdk[fastapi]>=1.38.0"
]
cloud-aws = [
    "boto3>=1.34.0",
    "botocore>=1.34.0"
]
cloud-azure = [
    "azure-identity>=1.15.0",
    "azure-mgmt-resource>=23.1.0",
    "azure-mgmt-compute>=30.4.0"
]
cloud-gcp = [
    "google-cloud-monitoring>=2.16.0",
    "google-cloud-compute>=1.15.0",
    "google-auth>=2.25.0"
]

[project.urls]
Homepage = "https://github.com/your-org/devops-control-tower"
Documentation = "https://docs.devops-control-tower.com"
Repository = "https://github.com/your-org/devops-control-tower.git"
Issues = "https://github.com/your-org/devops-control-tower/issues"

[project.scripts]
devops-tower = "devops_control_tower.cli:main"
tower-agent = "devops_control_tower.agents.cli:main"
tower-dashboard = "devops_control_tower.dashboard:serve"

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
pythonpath = ["."]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests"
]

[tool.coverage.run]
source = ["devops_control_tower"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/venv/*",
    "*/__pycache__/*"
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
]
